{"version":3,"sources":["components/Header/index.jsx","components/locationEntry.jsx","components/getLocationWeather.js","components/locationWeather.jsx","components/WeatherCard/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","color","LocationEntry","onUpdate","TextField","autoFocus","label","onBlur","e","target","value","onKeyDown","key","location","a","fetch","result","status","json","success","data","error","statusText","message","useStyles","makeStyles","headerLine","display","alignItems","flex","detail","flexDirection","justifyContent","detailLine","description","buttonBox","marginTop","ErrorMessage","apiError","WeatherDisplayDetails","weatherData","classes","handleUpdate","getLocationWeather","React","useMemo","weather","country","sys","temp","main","Math","round","toString","feelsLike","feels_like","icon","windTransform","wind","deg","windSpeed","speed","Avatar","className","largeAvatar","src","style","transform","Button","onClick","size","WeatherDisplay","LocationWeather","isBtn","useState","setWeatherData","setApiError","useEffect","getWeather","root","button","outline","background","border","cursor","fontSize","content","WeatherCard","onDelete","setIsBtn","handleChange","Card","CardContent","CardActions","flexGrow","height","overflow","containerGrid","overflowY","padding","addButton","margin","bottom","left","LOCAL_STORAGE_KEY","App","storedLocations","localStorage","getItem","JSON","parse","readFromLocalStorage","weatherLocations","setWeatherLocations","updateLocations","locations","setItem","stringify","saveToLocalStorage","removeAtIndex","index","filter","_","locationIndex","updateAtIndex","updatedLocation","map","path","components","Grid","container","spacing","xs","sm","md","lg","item","to","Fab","aria-label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAiBeA,EAZA,WACb,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAA/B,gD,yGCeOC,MArBf,YAAsC,IAAbC,EAAY,EAAZA,SASvB,OACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,iBACNC,OAZe,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAOC,QAaxCC,UAXkB,SAACH,GACP,UAAVA,EAAEI,KACJT,EAASK,EAAEC,OAAOC,W,mDCPxB,yCAAe,WAAOG,GAAP,eAAAC,EAAA,+EAEUC,MAAM,qDAAD,OAC6BF,EAD7B,kBAHd,mCAGc,kBAFf,UAKW,OAHhBG,EAFK,QAKAC,OALA,gCAM2BD,EAAOE,OANlC,6CAMAC,SAAS,EAAMC,KANf,uCASJ,CAAED,SAAS,EAAOE,MAAOL,EAAOM,aAT5B,2DAWJ,CAAEH,SAAS,EAAOE,MAAO,KAAGE,UAXxB,0DAAf,sD,iBCSMC,EAAYC,YAAW,CAC3BC,WAAY,CACVC,QAAS,OACTC,WAAY,UAEdf,SAAU,CACRgB,KAAM,GAERC,OAAQ,CACNH,QAAS,OACTI,cAAe,SACfH,WAAY,SACZI,eAAgB,UAElBC,WAAY,CACVN,QAAS,OACTC,WAAY,SACZI,eAAgB,UAElBE,YAAa,CACXL,KAAM,GAERM,UAAW,CACTC,UAAW,UAITC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAKA,EAGH,qCACE,cAAC,IAAD,CAAWrC,MAAM,UACjB,cAACF,EAAA,EAAD,CAAYE,MAAM,QAAQD,QAAQ,KAAlC,SACGsC,OANe,MAYlBC,EAAwB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAa3B,EAAe,EAAfA,SACtC4B,EAAUjB,IACVkB,EAAe,kBAAMC,EAAmB9B,IAFa,EAWvD+B,IAAMC,SAAQ,WAAO,IAAD,EACJL,EAAYM,SAAW,GAAlCA,EADe,oBAEtB,MAAO,CACLC,QAASP,EAAYQ,IAAID,QAAUP,EAAYQ,IAAID,QAAU,GAC7DE,KAAMT,EAAYU,KAAKD,KACnBE,KAAKC,MAAMZ,EAAYU,KAAKD,MAAMI,WAClC,GACJC,UAAWd,EAAYU,KAAKK,WACxBJ,KAAKC,MAAMZ,EAAYU,KAAKK,YAAYF,WACxC,KACJnB,YAAaY,EAAUA,EAAQZ,YAAc,GAC7CsB,KAAMV,EAAO,2CAC2BA,EAAQU,KADnC,WAET,GACJC,cAAejB,EAAYkB,KAAOlB,EAAYkB,KAAKC,IAAM,GAAK,KAC9DC,UAAWpB,EAAYkB,KAAOP,KAAKC,MAAMZ,EAAYkB,KAAKG,OAAS,KAEpE,CAACrB,IAxBFO,EAJyD,EAIzDA,QACAE,EALyD,EAKzDA,KACAf,EANyD,EAMzDA,YACAsB,EAPyD,EAOzDA,KACAC,EARyD,EAQzDA,cACAG,EATyD,EASzDA,UACAN,EAVyD,EAUzDA,UAoBF,OACE,qCACE,eAACvD,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBAAmC+C,KACnC,eAAChD,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAAgCiD,EAAhC,WACA,eAAClD,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAAsCsD,EAAtC,WACA,cAACQ,EAAA,EAAD,CAAQC,UAAWtB,EAAQuB,YAAaC,IAAKT,IAAS,IACtD,cAACzD,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BkC,IAC1B,eAACnC,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAAmC4D,EAAnC,YACA,cAAC,IAAD,CACEM,MAAO,CAAEC,UAAU,WAAD,OAAaV,EAAb,WAEpB,cAACW,EAAA,EAAD,CACEC,QAAS,kBAAM3B,GACfqB,UAAWtB,EAAQN,UACnBnC,QAAQ,WACRsE,KAAK,QACLrE,MAAM,UALR,wBAaAsE,EAAiB,SAAC,GAAqB,IAAnB/B,EAAkB,EAAlBA,YAClBC,EAAUjB,IAD0B,EAEnBoB,IAAMC,SAAQ,WAAO,IAAD,EACvBL,EAAYM,SAAW,GAAlCA,EADkC,oBAEzC,MAAO,CACLG,KACET,EAAYU,MAAQV,EAAYU,KAAKD,KACjCE,KAAKC,MAAMZ,EAAYU,KAAKD,MAC5B,GACNO,KAAMV,EAAO,2CAC2BA,EAAQU,KADnC,WAET,MAEL,CAAChB,IAXIS,EAFkC,EAElCA,KAAMO,EAF4B,EAE5BA,KAad,OACE,qCACE,eAACzD,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0BiD,EAA1B,WACCO,GAAQ,cAACM,EAAA,EAAD,CAAQC,UAAWtB,EAAQuB,YAAaC,IAAKT,QA8C7CgB,EAzCS,SAAC,GAAyB,IAAvB3D,EAAsB,EAAtBA,SAAU4D,EAAY,EAAZA,MAC7BhC,EAAUjB,IAD+B,EAEToB,IAAM8B,SAAS,IAFN,mBAExClC,EAFwC,KAE3BmC,EAF2B,OAGf/B,IAAM8B,SAAS,IAHA,mBAGxCpC,EAHwC,KAG9BsC,EAH8B,KAa/C,OATAhC,IAAMiC,WAAU,YACE,uCAAG,4BAAA/D,EAAA,sEACI6B,EAAmB9B,GADvB,OACXG,EADW,OAEjB2D,EAAe3D,EAAOG,QAAUH,EAAOI,KAAO,IAC9CwD,EAAY5D,EAAOG,QAAU,GAAKH,EAAOK,OAHxB,2CAAH,qDAKhByD,KACC,CAACjE,IAGF,qCACE,qBAAKkD,UAAWtB,EAAQf,WAAxB,SACE,cAAC3B,EAAA,EAAD,CAAYgE,UAAWtB,EAAQ5B,SAAUb,QAAQ,KAAjD,SACGa,MAGL,sBAAKkD,UAAWtB,EAAQR,WAAxB,UACE,cAAC,EAAD,CAAcK,SAAUA,IACvBmC,EAAQ,KAAO,cAAC,EAAD,CAAgBjC,YAAaA,OAE/C,qBAAKuB,UAAWtB,EAAQX,OAAxB,SACG2C,EACC,cAAC,EAAD,CACEjC,YAAaA,EACb3B,SAAUA,IAEV,WCnJNW,EAAYC,aAAW,iBAAO,CAClCsD,KAAM,CACJpD,QAAS,OACTI,cAAe,UAEjBI,UAAW,CACTR,QAAS,OACTK,eAAgB,gBAChBJ,WAAY,UAEdoD,OAAQ,CACNC,QAAS,OACTC,WAAY,OACZC,OAAQ,OACRC,OAAQ,UACRnF,MAAO,UACPoF,SAAU,aAEZC,QAAS,CAAEzD,KAAM,OA4CJ0D,EAzCK,SAAC,GAAsC,IAApC1E,EAAmC,EAAnCA,SAAU2E,EAAyB,EAAzBA,SAAUrF,EAAe,EAAfA,SACnCsC,EAAUjB,IADwC,EAE9BoB,IAAM8B,UAAS,GAFe,mBAEjDD,EAFiD,KAE1CgB,EAF0C,KAGlDC,EAAe,WACnB,OAAOD,GAAUhB,IAEnB,OACE,eAACkB,EAAA,EAAD,CAAM5B,UAAWtB,EAAQsC,KAAM/E,QAAQ,WAAvC,UACE,eAAC4F,EAAA,EAAD,CAAa7B,UAAWtB,EAAQ6C,QAAhC,WACIzE,GAAY,cAAC,EAAD,CAAeV,SAAUA,IACtCU,GAAY,cAAC,EAAD,CAAiBA,SAAUA,EAAU4D,MAAOA,OAE3D,eAACoB,EAAA,EAAD,CAAa9B,UAAWtB,EAAQN,UAAhC,UACE,cAACiC,EAAA,EAAD,CAAQC,QAASmB,EAAUlB,KAAK,QAAQrE,MAAM,UAA9C,oBAGCwE,EACC,cAACL,EAAA,EAAD,CAAQC,QAASqB,EAAcpB,KAAK,QAAQrE,MAAM,UAAlD,kBAIA,cAACmE,EAAA,EAAD,CACEC,QAASqB,EACT1F,QAAQ,WACRsE,KAAK,QACLrE,MAAM,UAJR,iCC5CJuB,EAAYC,aAAW,iBAAO,CAClCsD,KAAM,CACJe,SAAU,EACVnE,QAAS,OACTI,cAAe,SACfgE,OAAQ,QACRC,SAAU,UAEZC,cAAe,CACbpE,KAAM,EACNqE,UAAW,OACXC,QAAS,OAEXC,UAAW,CACTvG,SAAU,WACVwG,OAAQ,MACRC,OAAQ,QACRC,KAAM,WAGJC,EAAoB,YAkEXC,EAzDH,SAANA,IACJ,IAAMhE,EAAUjB,IADA,EAEgCoB,IAAM8B,SAP3B,WAC3B,IAAMgC,EAAkBC,aAAaC,QAAQJ,GAC7C,OAAOE,EAAkBG,KAAKC,MAAMJ,GAAmB,GAMrDK,IAHc,mBAETC,EAFS,KAESC,EAFT,KAQVC,EAAkB,SAACC,GACvBF,EAAoBE,GAjBG,SAACA,GAC1BR,aAAaS,QAAQZ,EAAmBK,KAAKQ,UAAUF,IAiBrDG,CAAmBH,IAGfI,EAAgB,SAACC,GAAD,OAAW,kBAC/BN,EACEF,EAAiBS,QAAO,SAACC,EAAGC,GAAJ,OAAsBA,IAAkBH,QAG9DI,EAAgB,SAACJ,GAAD,OAAW,SAACK,GAAD,OAC/BX,EACEF,EAAiBc,KAAI,SAACjH,EAAU8G,GAAX,OACnBA,IAAkBH,EAAQK,EAAkBhH,QAGlD,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOkH,KAAK,YAAYC,WAAYvB,EAApC,SACE,qBAAK1C,UAAWtB,EAAQsC,KAAxB,SACE,cAACkD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGpE,UAAWtB,EAAQwD,cAA/C,SACGe,EAAiBc,KAAI,SAACjH,EAAU2G,GAAX,OACpB,cAACS,EAAA,EAAD,CAAqBG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,MAAI,EAAtD,SACE,cAAC,EAAD,CACE3H,SAAUA,EACV2E,SAAU+B,EAAcC,GACxBrH,SAAUyH,EAAcJ,MAJjB3G,cAYrB,cAAC,IAAD,CAAM4H,GAAG,YAAT,SACE,cAACC,EAAA,EAAD,CACErE,QAxCe,kBAAM4C,EAAoB,GAAD,mBAAKD,GAAL,CAAuB,OAyC/D2B,aAAW,uBACX5E,UAAWtB,EAAQ2D,UACnBnG,MAAM,YAJR,SAME,cAAC,IAAD,YC5EK2I,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.ce4daef3.chunk.js","sourcesContent":["import React from \"react\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n          Weather-app by Namik Akhmedov\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nfunction LocationEntry({ onUpdate }) {\r\n  const handleBlur = (e) => onUpdate(e.target.value)\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onUpdate(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TextField\r\n      autoFocus\r\n      label=\"Enter location\"\r\n      onBlur={handleBlur}\r\n      onKeyDown={handleKeyDown}\r\n    />\r\n  )\r\n}\r\nLocationEntry.propTypes = {\r\n  onUpdate: PropTypes.func.isRequired,\r\n}\r\nexport default LocationEntry\r\n","const API_KEY = \"d42e812868b3c1c3fc4b6bd6bb86b9db\"\r\nexport default async (location) => {\r\n  try {\r\n    const result = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}&units=metric`\r\n    )\r\n    if (result.status === 200) {\r\n      return { success: true, data: await result.json() }\r\n    }\r\n\r\n    return { success: false, error: result.statusText }\r\n  } catch (ex) {\r\n    return { success: false, error: ex.message }\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport ErrorIcon from \"@material-ui/icons/Error\"\r\nimport getLocationWeather from \"./getLocationWeather\"\r\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\"\r\nimport { Button } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n  headerLine: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  location: {\r\n    flex: 1,\r\n  },\r\n  detail: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  detailLine: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  description: {\r\n    flex: 1,\r\n  },\r\n  buttonBox: {\r\n    marginTop: \"20px\",\r\n  },\r\n})\r\n\r\nconst ErrorMessage = ({ apiError }) => {\r\n  if (!apiError) return null\r\n\r\n  return (\r\n    <>\r\n      <ErrorIcon color=\"error\" />\r\n      <Typography color=\"error\" variant=\"h6\">\r\n        {apiError}\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n\r\nconst WeatherDisplayDetails = ({ weatherData, location }) => {\r\n  const classes = useStyles()\r\n  const handleUpdate = () => getLocationWeather(location)\r\n  const {\r\n    country,\r\n    temp,\r\n    description,\r\n    icon,\r\n    windTransform,\r\n    windSpeed,\r\n    feelsLike,\r\n  } = React.useMemo(() => {\r\n    const [weather] = weatherData.weather || []\r\n    return {\r\n      country: weatherData.sys.country ? weatherData.sys.country : \"\",\r\n      temp: weatherData.main.temp\r\n        ? Math.round(weatherData.main.temp).toString()\r\n        : \"\",\r\n      feelsLike: weatherData.main.feels_like\r\n        ? Math.round(weatherData.main.feels_like).toString()\r\n        : null,\r\n      description: weather ? weather.description : \"\",\r\n      icon: weather\r\n        ? `http://openweathermap.org/img/wn/${weather.icon}@2x.png`\r\n        : \"\",\r\n      windTransform: weatherData.wind ? weatherData.wind.deg - 90 : null,\r\n      windSpeed: weatherData.wind ? Math.round(weatherData.wind.speed) : 0,\r\n    }\r\n  }, [weatherData])\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\">country: {country}</Typography>\r\n      <Typography variant=\"h6\">temp: {temp}&deg;C</Typography>\r\n      <Typography variant=\"h6\">feels like: {feelsLike}&deg;C</Typography>\r\n      <Avatar className={classes.largeAvatar} src={icon} />{\" \"}\r\n      <Typography variant=\"h6\">{description}</Typography>\r\n      <Typography variant=\"h6\">wind: {`${windSpeed} km/h`}</Typography>\r\n      <ArrowRightAltIcon\r\n        style={{ transform: `rotateZ(${windTransform}deg)` }}\r\n      />\r\n      <Button\r\n        onClick={() => handleUpdate}\r\n        className={classes.buttonBox}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        color=\"primary\"\r\n      >\r\n        Update\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst WeatherDisplay = ({ weatherData }) => {\r\n  const classes = useStyles()\r\n  const { temp, icon } = React.useMemo(() => {\r\n    const [weather] = weatherData.weather || []\r\n    return {\r\n      temp:\r\n        weatherData.main && weatherData.main.temp\r\n          ? Math.round(weatherData.main.temp)\r\n          : \"\",\r\n      icon: weather\r\n        ? `http://openweathermap.org/img/wn/${weather.icon}@2x.png`\r\n        : \"\",\r\n    }\r\n  }, [weatherData])\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\">{temp}&deg;C</Typography>\r\n      {icon && <Avatar className={classes.largeAvatar} src={icon} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst LocationWeather = ({ location, isBtn }) => {\r\n  const classes = useStyles()\r\n  const [weatherData, setWeatherData] = React.useState({})\r\n  const [apiError, setApiError] = React.useState(\"\")\r\n  React.useEffect(() => {\r\n    const getWeather = async () => {\r\n      const result = await getLocationWeather(location)\r\n      setWeatherData(result.success ? result.data : {})\r\n      setApiError(result.success ? \"\" : result.error)\r\n    }\r\n    getWeather()\r\n  }, [location])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.headerLine}>\r\n        <Typography className={classes.location} variant=\"h5\">\r\n          {location}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.detailLine}>\r\n        <ErrorMessage apiError={apiError} />\r\n        {isBtn ? null : <WeatherDisplay weatherData={weatherData} />}\r\n      </div>\r\n      <div className={classes.detail}>\r\n        {isBtn ? (\r\n          <WeatherDisplayDetails\r\n            weatherData={weatherData}\r\n            location={location}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLocationWeather.propTypes = {\r\n  location: PropTypes.string.isRequired,\r\n  isBtn: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default LocationWeather\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport LocationEntry from \"../locationEntry\"\r\nimport LocationWeather from \"../locationWeather\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  buttonBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    outline: \"none\",\r\n    background: \"none\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    color: \"#3f51b5\",\r\n    fontSize: \"0.8125rem\",\r\n  },\r\n  content: { flex: 1 },\r\n}))\r\n\r\nconst WeatherCard = ({ location, onDelete, onUpdate }) => {\r\n  const classes = useStyles()\r\n  const [isBtn, setIsBtn] = React.useState(false)\r\n  const handleChange = () => {\r\n    return setIsBtn(!isBtn)\r\n  }\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent className={classes.content}>\r\n        {!location && <LocationEntry onUpdate={onUpdate} />}\r\n        {location && <LocationWeather location={location} isBtn={isBtn} />}\r\n      </CardContent>\r\n      <CardActions className={classes.buttonBox}>\r\n        <Button onClick={onDelete} size=\"small\" color=\"primary\">\r\n          Remove\r\n        </Button>\r\n        {isBtn ? (\r\n          <Button onClick={handleChange} size=\"small\" color=\"primary\">\r\n            BACK\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={handleChange}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            MORE DETAILS\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nWeatherCard.propTypes = {\r\n  location: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default WeatherCard\r\n","import React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport WeatherCard from \"./components/WeatherCard\"\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n  },\r\n  containerGrid: {\r\n    flex: 1,\r\n    overflowY: \"auto\",\r\n    padding: \"2em\",\r\n  },\r\n  addButton: {\r\n    position: \"absolute\",\r\n    margin: \"1em\",\r\n    bottom: \"92.5%\",\r\n    left: \"20%\",\r\n  },\r\n}))\r\nconst LOCAL_STORAGE_KEY = \"locations\"\r\nconst saveToLocalStorage = (locations) => {\r\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(locations))\r\n}\r\nconst readFromLocalStorage = () => {\r\n  const storedLocations = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n  return storedLocations ? JSON.parse(storedLocations) : []\r\n}\r\n\r\nconst App = () => {\r\n  const classes = useStyles()\r\n  const [weatherLocations, setWeatherLocations] = React.useState(\r\n    readFromLocalStorage()\r\n  )\r\n\r\n  const handleAddClick = () => setWeatherLocations([...weatherLocations, \"\"])\r\n\r\n  const updateLocations = (locations) => {\r\n    setWeatherLocations(locations)\r\n    saveToLocalStorage(locations)\r\n  }\r\n\r\n  const removeAtIndex = (index) => () =>\r\n    updateLocations(\r\n      weatherLocations.filter((_, locationIndex) => locationIndex !== index)\r\n    )\r\n\r\n  const updateAtIndex = (index) => (updatedLocation) =>\r\n    updateLocations(\r\n      weatherLocations.map((location, locationIndex) =>\r\n        locationIndex === index ? updatedLocation : location\r\n      )\r\n    )\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/homepage\" components={App}>\r\n          <div className={classes.root}>\r\n            <Grid container spacing={3} className={classes.containerGrid}>\r\n              {weatherLocations.map((location, index) => (\r\n                <Grid key={location} xs={12} sm={6} md={4} lg={3} item>\r\n                  <WeatherCard\r\n                    location={location}\r\n                    onDelete={removeAtIndex(index)}\r\n                    onUpdate={updateAtIndex(index)}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n      <Link to=\"/homepage\">\r\n        <Fab\r\n          onClick={handleAddClick}\r\n          aria-label=\"add weather location\"\r\n          className={classes.addButton}\r\n          color=\"secondary\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Link>\r\n    </Router>\r\n  )\r\n}\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\nreportWebVitals()\r\n"],"sourceRoot":""}